#!/usr/local/bin/node

var commander = require('commander');
var jmap = require('./node_modules/jmap-client/dist/jmap-client.js');

commander
  .option('-s, --server [value]', 'The jmap server', 'https://localhost')
  .option('-u, --user [value]', 'The user', 'user@mydomain.org')
  .option('-p, --password [value]', 'The user password', 'secret')
  .option('-j, --json [value]', 'The json to send to the command', '{}');

function failedFn(err) {
  console.log(err);
}

function printResult(result) {
  console.log(result);
}

function createClient() {
  var client = new jmap.Client(new jmap.RequestTransport(new jmap.QPromiseProvider()));
  return client
    .withAuthenticationUrl(commander.server + '/authentication')
    .authPassword(commander.user, commander.password, 'Device name')
    .then(function(authAccess) {
      return client
        .withAPIUrl(commander.server + '/jmap')
        .withAuthenticationToken(authAccess.accessToken);
    })
}

commander
  .version('0.0.1')
  .command('getMailboxes')
  .action(function () {
    createClient()
      .then(function(client) {
        client
          .getMailboxes(JSON.parse(commander.json))
          .then(printResult, failedFn);
      });
  });

commander
  .version('0.0.1')
  .command('getMessageList')
  .action(function () {
    createClient()
      .then(function(client) {
        client
          .getMessageList(JSON.parse(commander.json))
          .then(printResult, failedFn);
      });
  });

commander
  .version('0.0.1')
  .command('getMessages')
  .action(function () {
    createClient()
      .then(function(client) {
        client
          .getMessages(JSON.parse(commander.json))
          .then(printResult, failedFn);
      });
  });

commander.parse(process.argv);
